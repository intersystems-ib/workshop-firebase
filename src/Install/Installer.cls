Include %occInclude

Class Install.Installer
{

Parameter NAMESPACE As STRING = "FIREBASE";

XData Install [ XMLNamespace = INSTALLER ]
{
<Manifest>
    <Log Text="Creating ${NAMESPACE} namespace and DB..." Level="0"/>
    <Default Name="RESOURCE" Value="%DB_${NAMESPACE}" />
    <Namespace Name="${NAMESPACE}" Code="${NAMESPACE}" Data="${NAMESPACE}" Create="yes" Ensemble="0">
        <Configuration>
            <Database Name="${NAMESPACE}" Dir="${MGRDIR}${DBNAME}" Create="yes" MountAtStartup="true"/>
        </Configuration>
        <Log Text="Enable interoperability to ${NAMESPACE}..." Level="0"/>
	    <Invoke Class="%Library.EnsembleMgr" Method="EnableNamespace" CheckStatus="true">
            <Arg name="pTargetNS" Value="${NAMESPACE}"/>
            <Arg name="pVerbose" Value="1"/>
	    </Invoke>
    </Namespace>
</Manifest>
}

/// This is a method generator whose code is generated by XGL.
ClassMethod Installer(ByRef pVars, pLogLevel As %Integer = 3, pInstaller As %Installer.Installer, pLogger As %Installer.AbstractLogger) As %Status [ CodeMode = objectgenerator, Internal ]
{
    return ##class(%Installer.Manifest).%Generate(%compiledclass,%code,"Install")
}

ClassMethod Install() As %Status
{
    set sc = $$$OK
    try {
        set args("NAMESPACE") = ..#NAMESPACE
        set args("DBNAME") = $zconvert(..#NAMESPACE,"L")
        
        #; install manifest
        set sc = $$$ADDSC(sc,..Installer(.args))


        set $namespace = "%SYS"
        kill p do ##class(Security.Users).Get("Admin",.p) set (p("PasswordNeverExpires"),p("AccountNeverExpires"))=1 do ##class(Security.Users).Modify("Admin",.p)
        kill p do ##class(Security.Users).Get("irisowner",.p) set (p("PasswordNeverExpires"),p("AccountNeverExpires"))=1 do ##class(Security.Users).Modify("irisowner",.p)
        kill p do ##class(Security.Users).Get("SuperUser",.p) set (p("PasswordNeverExpires"),p("AccountNeverExpires"))=1 do ##class(Security.Users).Modify("SuperUser",.p)
        kill p do ##class(Security.Users).Get("_SYSTEM",.p) set (p("PasswordNeverExpires"),p("AccountNeverExpires"))=1 do ##class(Security.Users).Modify("_SYSTEM",.p)
    } catch (err) {
        set sc = $$$ADDSC(sc,err.AsStatus())
    }
    return sc
}

}
